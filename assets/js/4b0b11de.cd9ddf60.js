"use strict";(self.webpackChunknitcbase_beta=self.webpackChunknitcbase_beta||[]).push([[3136],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return h}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,d=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=s(a),h=i,N=c["".concat(d,".").concat(h)]||c[h]||p[h]||l;return a?n.createElement(N,r(r({ref:t},m),{},{components:a})):n.createElement(N,r({ref:t},m))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var s=2;s<l;s++)r[s]=a[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},2784:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return m},default:function(){return c}});var n=a(7462),i=a(3366),l=(a(7294),a(3905)),r=["components"],o={sidebar_position:1,title:"User Interface Commands",tags:["introduction"]},d=void 0,s={unversionedId:"User Interface Commands/introduction",id:"User Interface Commands/introduction",isDocsHomePage:!1,title:"User Interface Commands",description:"NITCbase supports two user interfaces namely, XFS Interface and Frontend Interface. The commands supported by the two interfaces have overlap and they fall into the following four categories:",source:"@site/docs/User Interface Commands/introduction.md",sourceDirName:"User Interface Commands",slug:"/User Interface Commands/introduction",permalink:"/docs/User Interface Commands/introduction",tags:[{label:"introduction",permalink:"/docs/tags/introduction"}],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"User Interface Commands",tags:["introduction"]}},m=[{value:"Data Definition Language Commands",id:"data-definition-language-commands",children:[{value:"CREATE TABLE",id:"create-table",children:[{value:"Description",id:"description",children:[],level:4},{value:"Syntax",id:"syntax",children:[],level:4}],level:3},{value:"DROP TABLE",id:"drop-table",children:[{value:"Description",id:"description-1",children:[],level:4},{value:"Syntax",id:"syntax-1",children:[],level:4}],level:3},{value:"OPEN TABLE",id:"open-table",children:[{value:"Description",id:"description-2",children:[],level:4},{value:"Syntax",id:"syntax-2",children:[],level:4}],level:3},{value:"CLOSE TABLE",id:"close-table",children:[{value:"Description",id:"description-3",children:[],level:4},{value:"Syntax",id:"syntax-3",children:[],level:4}],level:3},{value:"CREATE INDEX",id:"create-index",children:[{value:"Description",id:"description-4",children:[],level:4},{value:"Syntax",id:"syntax-4",children:[],level:4}],level:3},{value:"DROP INDEX",id:"drop-index",children:[{value:"Description",id:"description-5",children:[],level:4},{value:"Syntax",id:"syntax-5",children:[],level:4}],level:3},{value:"ALTER TABLE RENAME",id:"alter-table-rename",children:[{value:"Description",id:"description-6",children:[],level:4},{value:"Syntax",id:"syntax-6",children:[],level:4}],level:3},{value:"ALTER TABLE RENAME COLUMN",id:"alter-table-rename-column",children:[{value:"Description",id:"description-7",children:[],level:4},{value:"Syntax",id:"syntax-7",children:[],level:4}],level:3}],level:2},{value:"Data Manipulation Language Commands",id:"data-manipulation-language-commands",children:[{value:"INSERT INTO TABLE VALUES",id:"insert-into-table-values",children:[{value:"Description",id:"description-8",children:[],level:4},{value:"Syntax",id:"syntax-8",children:[],level:4}],level:3},{value:"INSERT INTO TABLE FROM FILE",id:"insert-into-table-from-file",children:[{value:"Description",id:"description-9",children:[],level:4},{value:"Syntax",id:"syntax-9",children:[],level:4}],level:3},{value:"SELECT * FROM TABLE",id:"select--from-table",children:[{value:"Description",id:"description-10",children:[],level:4},{value:"Syntax",id:"syntax-10",children:[],level:4}],level:3},{value:"SELECT Attrlist FROM TABLE",id:"select-attrlist-from-table",children:[{value:"Description",id:"description-11",children:[],level:4},{value:"Syntax",id:"syntax-11",children:[],level:4}],level:3},{value:"SELECT * FROM TABLE WHERE",id:"select--from-table-where",children:[{value:"Description",id:"description-12",children:[],level:4},{value:"Syntax",id:"syntax-12",children:[],level:4}],level:3},{value:"SELECT Attrlist FROM TABLE WHERE",id:"select-attrlist-from-table-where",children:[{value:"Description",id:"description-13",children:[],level:4},{value:"Syntax",id:"syntax-13",children:[],level:4}],level:3},{value:"SELECT * FROM JOIN WHERE",id:"select--from-join-where",children:[{value:"Description",id:"description-14",children:[],level:4},{value:"Syntax",id:"syntax-14",children:[],level:4}],level:3},{value:"SELECT Attrlist FROM JOIN WHERE",id:"select-attrlist-from-join-where",children:[{value:"Description",id:"description-15",children:[],level:4},{value:"Syntax",id:"syntax-15",children:[],level:4}],level:3}],level:2},{value:"External File System (XFS) Commands",id:"external-file-system-xfs-commands",children:[{value:"Format Disk",id:"format-disk",children:[{value:"Description",id:"description-16",children:[],level:4},{value:"Syntax",id:"syntax-16",children:[],level:4}],level:3},{value:"Import Relation",id:"import-relation",children:[{value:"Description",id:"description-17",children:[],level:4},{value:"File Fromat",id:"file-fromat",children:[],level:4},{value:"Syntax",id:"syntax-17",children:[],level:4}],level:3},{value:"Export Relation",id:"export-relation",children:[{value:"Description",id:"description-18",children:[],level:4},{value:"Syntax",id:"syntax-18",children:[],level:4}],level:3},{value:"List Relation Names",id:"list-relation-names",children:[{value:"Description",id:"description-19",children:[],level:4},{value:"Syntax",id:"syntax-19",children:[],level:4}],level:3},{value:"Dump Block Allocation Map",id:"dump-block-allocation-map",children:[{value:"Description",id:"description-20",children:[],level:4},{value:"Syntax",id:"syntax-20",children:[],level:4}],level:3},{value:"Dump Relation Catalog",id:"dump-relation-catalog",children:[{value:"Description",id:"description-21",children:[],level:4},{value:"Syntax",id:"syntax-21",children:[],level:4}],level:3},{value:"Dump Attribute Catalog",id:"dump-attribute-catalog",children:[{value:"Description",id:"description-22",children:[],level:4},{value:"Syntax",id:"syntax-22",children:[],level:4}],level:3},{value:"Exit",id:"exit",children:[{value:"Description",id:"description-23",children:[],level:4},{value:"Syntax",id:"syntax-23",children:[],level:4}],level:3},{value:"Print B+ Tree",id:"print-b-tree",children:[{value:"Description",id:"description-24",children:[],level:4},{value:"Syntax",id:"syntax-24",children:[],level:4}],level:3},{value:"Print B+ Blocks",id:"print-b-blocks",children:[{value:"Description",id:"description-25",children:[],level:4},{value:"Syntax",id:"syntax-25",children:[],level:4}],level:3}],level:2},{value:"Script Commands",id:"script-commands",children:[{value:"Batch Execution",id:"batch-execution",children:[{value:"Description",id:"description-26",children:[],level:4},{value:"Syntax",id:"syntax-26",children:[],level:4}],level:3},{value:"Echo",id:"echo",children:[{value:"Description",id:"description-27",children:[],level:4},{value:"Syntax",id:"syntax-27",children:[],level:4}],level:3}],level:2}],p={toc:m};function c(e){var t=e.components,a=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"NITCbase supports two user interfaces namely, ",(0,l.kt)("a",{parentName:"p",href:"/docs/XFS%20Interface/introduction"},"XFS Interface")," and ",(0,l.kt)("a",{parentName:"p",href:"/docs/Design/Frontend"},"Frontend Interface"),". The commands supported by the two interfaces have overlap and they fall into the following ",(0,l.kt)("strong",{parentName:"p"},"four")," categories:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"../NITCbase_Commands#data-definition-language-commands"},"Data Definition Language(DDL) Commands ")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"../NITCbase_Commands#data-manipulation-language-commands"},"Data Manipulation Language(DML) Commands")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"../NITCbase_Commands#external-file-system-xfs-commands"},"XFS / External File System Commands")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"../NITCbase_Commands##script-commands"},"Script Commands"))),(0,l.kt)("h2",{id:"data-definition-language-commands"},"Data Definition Language Commands"),(0,l.kt)("p",null,"The Data Definition Language(DDL) commands are used to define the database schema. They are used to create and delete relations, modify the structure of relations in the database and also create and delete indexes on the attributes of relations. DDL Commands are supported by both XFS Interface and Frontend Interface. The following are the DDL commands supported by NITCBase."),(0,l.kt)("h3",{id:"create-table"},"CREATE TABLE"),(0,l.kt)("h4",{id:"description"},"Description"),(0,l.kt)("p",null,"This command is used to create a relation of the given name, with given attribute names and types. The type of an attribute can only be ",(0,l.kt)("inlineCode",{parentName:"p"},"NUM")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"STR")," for numbers and strings respectively."),(0,l.kt)("h4",{id:"syntax"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"CREATE TABLE tablename(attr1_name attr1_type, attr2_name attr2_type, ... )\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"In NITCBase, the ",(0,l.kt)("strong",{parentName:"li"},"maximum size of an attribute is 16 bytes"),". "),(0,l.kt)("li",{parentName:"ul"},"Since relation names and attribute names are attributes themselves in the catalog structures, the table name and attribute names in the queries must only have a maximum of 15 characters. "),(0,l.kt)("li",{parentName:"ul"},"If the length is greater than 16, ",(0,l.kt)("strong",{parentName:"li"},"only the first 15 characters will be taken.")),(0,l.kt)("li",{parentName:"ul"},"All attribute names of the relation must be unique."),(0,l.kt)("li",{parentName:"ul"},"A relation cannot be named as ",(0,l.kt)("inlineCode",{parentName:"li"},"temp"),", since it is used for internal operations.")))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The following command will create a Relation called ",(0,l.kt)("inlineCode",{parentName:"p"},"sample")," with ",(0,l.kt)("inlineCode",{parentName:"p"},"RollNo"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Name")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"CGPA")," as the attributes of types number, string and number respectively:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"CREATE TABLE sample(Rollno NUM, Name STR, CGPA NUM)\n")))),(0,l.kt)("h3",{id:"drop-table"},"DROP TABLE"),(0,l.kt)("h4",{id:"description-1"},"Description"),(0,l.kt)("p",null,"This command is used to delete the relation of the given name. It deletes all the record and index blocks corresponding to the relations, and also deletes the entries corresponding to the relation in the ",(0,l.kt)("inlineCode",{parentName:"p"},"Relation catalog")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Attribute catalog"),". The entries corresponding to the deleted blocks in the ",(0,l.kt)("inlineCode",{parentName:"p"},"Block allocation map")," are also reset."),(0,l.kt)("h4",{id:"syntax-1"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"DROP TABLE tablename\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The following command will delete the relation called ",(0,l.kt)("inlineCode",{parentName:"p"},"sample"),":"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"DROP TABLE sample\n")))),(0,l.kt)("h3",{id:"open-table"},"OPEN TABLE"),(0,l.kt)("h4",{id:"description-2"},"Description"),(0,l.kt)("p",null,"This command is used to open the relation specified for manipulation by updating the Cache/OpenRelTable."),(0,l.kt)("h4",{id:"syntax-2"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"OPEN TABLE tablename\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The following command will open the relation called ",(0,l.kt)("inlineCode",{parentName:"p"},"sample"),":"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"OPEN TABLE sample\n")))),(0,l.kt)("h3",{id:"close-table"},"CLOSE TABLE"),(0,l.kt)("h4",{id:"description-3"},"Description"),(0,l.kt)("p",null,"This command is used to close the relation specified by updating the Cache/OpenRelTable."),(0,l.kt)("h4",{id:"syntax-3"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"CLOSE TABLE tablename\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The following command will close the relation called ",(0,l.kt)("inlineCode",{parentName:"p"},"sample"),":"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"CLOSE TABLE sample\n")))),(0,l.kt)("h3",{id:"create-index"},"CREATE INDEX"),(0,l.kt)("h4",{id:"description-4"},"Description"),(0,l.kt)("p",null,"This command is used to create an index on a given attribute of a relation. ",(0,l.kt)("a",{parentName:"p",href:"https://nitcbase.github.io/design/Bplustreedetails.html"},"B+ trees")," are used for creating indexes. Before executing this query, the relation must be opened using the ",(0,l.kt)("inlineCode",{parentName:"p"},"OPEN TABLE")," command."),(0,l.kt)("h4",{id:"syntax-4"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"CREATE INDEX ON tablename.attributename\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The following command will create an index on the ",(0,l.kt)("inlineCode",{parentName:"p"},"Rollno")," attribute of the ",(0,l.kt)("inlineCode",{parentName:"p"},"sample")," relation:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"CREATE INDEX ON sample.Rollno\n")))),(0,l.kt)("h3",{id:"drop-index"},"DROP INDEX"),(0,l.kt)("h4",{id:"description-5"},"Description"),(0,l.kt)("p",null,"This command is used to drop/delete the B+ tree indexing on the given attribute of the given relation. Before executing this query, the relation must be opened using the ",(0,l.kt)("inlineCode",{parentName:"p"},"OPEN TABLE")," command."),(0,l.kt)("h4",{id:"syntax-5"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"DROP INDEX ON tablename.attributename\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The following command will drop the index on the ",(0,l.kt)("inlineCode",{parentName:"p"},"Rollno")," attribute of the ",(0,l.kt)("inlineCode",{parentName:"p"},"sample")," relation:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"DROP INDEX ON sample.Rollno\n")))),(0,l.kt)("h3",{id:"alter-table-rename"},"ALTER TABLE RENAME"),(0,l.kt)("h4",{id:"description-6"},"Description"),(0,l.kt)("p",null,"This command is used to rename an existing relation to the given new name."),(0,l.kt)("h4",{id:"syntax-6"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ALTER TABLE RENAME tablename TO new_tablename\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The following command will rename the existing relation ",(0,l.kt)("inlineCode",{parentName:"p"},"sample"),"  to ",(0,l.kt)("inlineCode",{parentName:"p"},"Students"),":"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ALTER TABLE RENAME sample TO Students\n")))),(0,l.kt)("h3",{id:"alter-table-rename-column"},"ALTER TABLE RENAME COLUMN"),(0,l.kt)("h4",{id:"description-7"},"Description"),(0,l.kt)("p",null,"This command is used to rename an attribute of an existing relation to the given new name."),(0,l.kt)("h4",{id:"syntax-7"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ALTER TABLE RENAME tablename COLUMN column_name TO new_column_name\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The following command will rename the the attribute of an existing relation ",(0,l.kt)("inlineCode",{parentName:"p"},"sample"),"  from ",(0,l.kt)("inlineCode",{parentName:"p"},"CGPA")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"SGPA"),":"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ALTER TABLE RENAME sample COLUMN CGPA TO SGPA\n")))),(0,l.kt)("h2",{id:"data-manipulation-language-commands"},"Data Manipulation Language Commands"),(0,l.kt)("p",null,"The Data Manipulation Language(DML) commands are used to manipulate the data stored in the relations of the database. DML Commands are supported by both XFS Interface and Frontend Interface. The following are the DML commands supported by NITCBase:"),(0,l.kt)("h3",{id:"insert-into-table-values"},"INSERT INTO TABLE VALUES"),(0,l.kt)("h4",{id:"description-8"},"Description"),(0,l.kt)("p",null,"This command is used to insert a single record into the given relation."),(0,l.kt)("h4",{id:"syntax-8"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"INSERT INTO tablename VALUES ( value1, value2, value3, ... )\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"The attribute values of the record are to be given as comma separated values in the same as the order of attributes in the relation."),(0,l.kt)("li",{parentName:"ul"},"The number and types of the attribute values of the record to be inserted into relation must match.")))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Given below are the records of the relation ",(0,l.kt)("inlineCode",{parentName:"p"},"Students"),"."),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Rollno"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"CGPA"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Anu"),(0,l.kt)("td",{parentName:"tr",align:null},"9.01")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"Cody"),(0,l.kt)("td",{parentName:"tr",align:null},"7")))),(0,l.kt)("p",{parentName:"div"},"Suppose that we need to insert a new record ",(0,l.kt)("inlineCode",{parentName:"p"},"2, Amy, 9.5")," into the relation ",(0,l.kt)("inlineCode",{parentName:"p"},"Students"),"."),(0,l.kt)("p",{parentName:"div"},"The query for doing that will be the following:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"INSERT INTO Students VALUES (2, Amy, 9.5)\n")),(0,l.kt)("p",{parentName:"div"},"The records of the relation ",(0,l.kt)("inlineCode",{parentName:"p"},"Students")," will now be:"),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Rollno"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"CGPA"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Anu"),(0,l.kt)("td",{parentName:"tr",align:null},"9.01")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"Cody"),(0,l.kt)("td",{parentName:"tr",align:null},"7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Amy"),(0,l.kt)("td",{parentName:"tr",align:null},"9.5")))))),(0,l.kt)("h3",{id:"insert-into-table-from-file"},"INSERT INTO TABLE FROM FILE"),(0,l.kt)("h4",{id:"description-9"},"Description"),(0,l.kt)("p",null,"This command is used to insert multiple records into an already existing relation, ",(0,l.kt)("inlineCode",{parentName:"p"},"tablename")," from a CSV file, ",(0,l.kt)("inlineCode",{parentName:"p"},"filename.csv")," containing values for the attributes of the relation."),(0,l.kt)("h4",{id:"syntax-9"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"INSERT INTO tablename VALUES FROM filename\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"Each line in the CSV file corresponds to a record to be inserted in to the specified relation."),(0,l.kt)("li",{parentName:"ul"},"The order of attribute values in each line of the CSV file must be same as that of the attributes of the relation."),(0,l.kt)("li",{parentName:"ul"},"The number and types of attribute values in each row should match the number and types of the attributes of the specified relation."),(0,l.kt)("li",{parentName:"ul"},"The CSV file should not contain any ",(0,l.kt)("inlineCode",{parentName:"li"},"null")," values."),(0,l.kt)("li",{parentName:"ul"},"The CSV file from which the values are to be inserted, must be stored in the path ",(0,l.kt)("inlineCode",{parentName:"li"},"$HOME/NITCBase/Files/"),".")))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Here is an example of a CSV file, ",(0,l.kt)("inlineCode",{parentName:"p"},"students.csv")," containing the records for insertion into an already existing relation ",(0,l.kt)("inlineCode",{parentName:"p"},"Students"),":"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/Files/students.csv"',title:'"/Files/students.csv"'},"3,Sunny,8\n5,Sania,6\n7,Ralph,7.5\n")),(0,l.kt)("p",{parentName:"div"},"The query to insert all records contained in above file to the ",(0,l.kt)("inlineCode",{parentName:"p"},"Students")," relation will be:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"INSERT INTO Students VALUES FROM students.csv\n")))),(0,l.kt)("h3",{id:"select--from-table"},"SELECT * FROM TABLE"),(0,l.kt)("h4",{id:"description-10"},"Description"),(0,l.kt)("p",null,"This command creates a new target relation with the same attributes as that of source relation, and inserts into it all records from the source relation."),(0,l.kt)("h4",{id:"syntax-10"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SELECT * FROM source_relation INTO target_relation\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SELECT * FROM Students INTO Target_Students\n")))),(0,l.kt)("h3",{id:"select-attrlist-from-table"},"SELECT Attrlist FROM TABLE"),(0,l.kt)("h4",{id:"description-11"},"Description"),(0,l.kt)("p",null,"This command creates a new target relation with the attributes specified in ",(0,l.kt)("inlineCode",{parentName:"p"},"Attrlist"),", and inserts all records(only the values corresponding to the specified attributes) of the source relation, into the newly created target relation."),(0,l.kt)("h4",{id:"syntax-11"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SELECT Attribute1, Attribute2, ... FROM source_relation INTO target_relation\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SELECT Name, CGPA FROM Students INTO Target_Students\n")))),(0,l.kt)("h3",{id:"select--from-table-where"},"SELECT * FROM TABLE WHERE"),(0,l.kt)("h4",{id:"description-12"},"Description"),(0,l.kt)("p",null,"This command is used to retrieve all records of a given source relation, and insert them into a target relation, based on the the given condition. All records in the source relation that satisfy the condition, will be inserted into the newly created target relation."),(0,l.kt)("h4",{id:"syntax-12"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SELECT * FROM source_relation INTO target_relation WHERE attrname OP value\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"Here, ",(0,l.kt)("inlineCode",{parentName:"li"},"OP")," should only take a value from the set ",(0,l.kt)("inlineCode",{parentName:"li"},"{ =, >, <, >=, <=, != }"),".")))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SELECT * FROM Students INTO Target_Students WHERE CGPA > 8\n")))),(0,l.kt)("h3",{id:"select-attrlist-from-table-where"},"SELECT Attrlist FROM TABLE WHERE"),(0,l.kt)("h4",{id:"description-13"},"Description"),(0,l.kt)("p",null,"This command creates a new target relation with the attributes specified in ",(0,l.kt)("inlineCode",{parentName:"p"},"Attrlist"),", and inserts those records (only the values corresponding to the attributes specified in the ",(0,l.kt)("inlineCode",{parentName:"p"},"Attrlist"),") from the source relation which satisfy the given condition."),(0,l.kt)("h4",{id:"syntax-13"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SELECT Attribute1, Attribute2, ... FROM source_relation INTO target_relation WHERE attrname OP value\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"Here, ",(0,l.kt)("inlineCode",{parentName:"li"},"OP")," should only take a value from the set ",(0,l.kt)("inlineCode",{parentName:"li"},"{ =, >, <, >=, <=, != }"),".")))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SELECT Name, CGPA FROM Students INTO Target_Students WHERE CGPA > 8\n")))),(0,l.kt)("h3",{id:"select--from-join-where"},"SELECT * FROM JOIN WHERE"),(0,l.kt)("h4",{id:"description-14"},"Description"),(0,l.kt)("p",null,"This command creates a new target relation with attributes constituting from both the source relations (excluding specified attribute from second source relation). It inserts the records obtained by ",(0,l.kt)("inlineCode",{parentName:"p"},"equi-join")," of both the source relations (an attribute from each relation specified in arguments are used for ",(0,l.kt)("inlineCode",{parentName:"p"},"equi-join"),") into the target relation."),(0,l.kt)("h4",{id:"syntax-14"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SELECT * FROM source_relation1 JOIN source_relation2 INTO target_relation WHERE source_relation1.attribute1 = source_relation2.attribute2\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"attribute1")," should belong to ",(0,l.kt)("inlineCode",{parentName:"li"},"source_relation1")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"attribute2")," should belong to ",(0,l.kt)("inlineCode",{parentName:"li"},"source_relation2"),"."),(0,l.kt)("li",{parentName:"ul"},"The join attributes (i.e., ",(0,l.kt)("inlineCode",{parentName:"li"},"attribute1")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"attribute2"),") can have the same name."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Excluding the join attributes, there should be no other attributes with the same name in these relations."))))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Given below are the records of the relation ",(0,l.kt)("inlineCode",{parentName:"p"},"Student1"),"."),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Rollno"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Batch"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Anu"),(0,l.kt)("td",{parentName:"tr",align:null},"A")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Cody"),(0,l.kt)("td",{parentName:"tr",align:null},"B")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Amy"),(0,l.kt)("td",{parentName:"tr",align:null},"B")))),(0,l.kt)("p",{parentName:"div"},"Given below are the records of the relation ",(0,l.kt)("inlineCode",{parentName:"p"},"Student2"),"."),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Rollno"),(0,l.kt)("th",{parentName:"tr",align:null},"Marks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"98")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"80")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"97")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"67")))),(0,l.kt)("p",{parentName:"div"},"An example for a join query is:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SELECT * FROM Students1 JOIN Students2 INTO Students WHERE Students1.Rollno = Students2.Rollno\n")),(0,l.kt)("p",{parentName:"div"},(0,l.kt)("inlineCode",{parentName:"p"},"Equi-join")," on these two relations based on the attribute ",(0,l.kt)("inlineCode",{parentName:"p"},"Rollno")," would result in the following target relation, ",(0,l.kt)("inlineCode",{parentName:"p"},"Students"),"."),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Rollno"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Batch"),(0,l.kt)("th",{parentName:"tr",align:null},"Marks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Anu"),(0,l.kt)("td",{parentName:"tr",align:null},"A"),(0,l.kt)("td",{parentName:"tr",align:null},"98")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Cody"),(0,l.kt)("td",{parentName:"tr",align:null},"B"),(0,l.kt)("td",{parentName:"tr",align:null},"80")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Amy"),(0,l.kt)("td",{parentName:"tr",align:null},"B"),(0,l.kt)("td",{parentName:"tr",align:null},"97")))))),(0,l.kt)("h3",{id:"select-attrlist-from-join-where"},"SELECT Attrlist FROM JOIN WHERE"),(0,l.kt)("h4",{id:"description-15"},"Description"),(0,l.kt)("p",null,"This command creates a new target relation with attributes given in ",(0,l.kt)("inlineCode",{parentName:"p"},"Attrlist"),". It inserts the records (only the values of the specified attributes in ",(0,l.kt)("inlineCode",{parentName:"p"},"Attrlist")," obtained by ",(0,l.kt)("inlineCode",{parentName:"p"},"equi-join")," of both the source relations (an attribute from each relation specified in arguments are used for equi-join) into the target relation."),(0,l.kt)("h4",{id:"syntax-15"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SELECT Attribute1, Attribute2, ... FROM source_relation1 JOIN source_relation2 INTO target_relation WHERE source_relation1.attribute1 = source_relation2.attribute2\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"attribute1")," should belong to ",(0,l.kt)("inlineCode",{parentName:"li"},"source_relation1")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"attribute2")," should belong to ",(0,l.kt)("inlineCode",{parentName:"li"},"source_relation2"),"."),(0,l.kt)("li",{parentName:"ul"},"The join attributes(ie ",(0,l.kt)("inlineCode",{parentName:"li"},"attribute1")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"attribute2"),") can have the same name."),(0,l.kt)("li",{parentName:"ul"},"Excluding the join attributes, there should be no other attributes with the same name in these relations.")))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Given below are the records of the relation ",(0,l.kt)("inlineCode",{parentName:"p"},"Student1"),"."),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Rollno"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Batch"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Anu"),(0,l.kt)("td",{parentName:"tr",align:null},"A")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Cody"),(0,l.kt)("td",{parentName:"tr",align:null},"B")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Amy"),(0,l.kt)("td",{parentName:"tr",align:null},"B")))),(0,l.kt)("p",{parentName:"div"},"Given below are the records of the relation ",(0,l.kt)("inlineCode",{parentName:"p"},"Student2"),"."),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Rollno"),(0,l.kt)("th",{parentName:"tr",align:null},"Marks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"98")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"80")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"97")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"67")))),(0,l.kt)("p",{parentName:"div"},"An example for a join query is:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"SELECT Rollno, Name, Marks FROM Students1 JOIN Students2 INTO Students WHERE Students1.Rollno = Students2.Rollno\n")),(0,l.kt)("p",{parentName:"div"},(0,l.kt)("inlineCode",{parentName:"p"},"Equi-join")," on these two relations based on the attribute ",(0,l.kt)("inlineCode",{parentName:"p"},"Rollno")," would result in the following target relation, ",(0,l.kt)("inlineCode",{parentName:"p"},"Students"),"."),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Rollno"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Marks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Anu"),(0,l.kt)("td",{parentName:"tr",align:null},"98")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Cody"),(0,l.kt)("td",{parentName:"tr",align:null},"80")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Amy"),(0,l.kt)("td",{parentName:"tr",align:null},"97")))))),(0,l.kt)("h2",{id:"external-file-system-xfs-commands"},"External File System (XFS) Commands"),(0,l.kt)("p",null,"The External File System commands are used to format the disk, dump disk data structures like Block Allocation Map, Relation Catalog and Attribute Catalog, load / remove relations, list relations and copy the records of a relation on the NITCbase disk to a UNIX file. These commands are only available for the XFS Interface. The following are the External File System commands supported by NITCBase."),(0,l.kt)("h3",{id:"format-disk"},"Format Disk"),(0,l.kt)("h4",{id:"description-16"},"Description"),(0,l.kt)("p",null,"This command is used to create a simulated disk or to format the disk if already it already exists. On the newly created/formatted disk, initialization of ",(0,l.kt)("em",{parentName:"p"},"disk data structures"),", namely - ",(0,l.kt)("inlineCode",{parentName:"p"},"Block allocation map"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Relation catalog")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Attribute catalog")," are done according to the specification for disk model given in the ",(0,l.kt)("a",{parentName:"p",href:"https://nitcbase.github.io/storage-model.html"},"Physical layer")," of NITCBase. The disk is simulated on a binary file called ",(0,l.kt)("inlineCode",{parentName:"p"},"disk")," which is located at ",(0,l.kt)("inlineCode",{parentName:"p"},"$HOME/NITCBase/Disk/")," once it is created."),(0,l.kt)("h4",{id:"syntax-16"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"fdisk\n")),(0,l.kt)("h3",{id:"import-relation"},"Import Relation"),(0,l.kt)("h4",{id:"description-17"},"Description"),(0,l.kt)("p",null,"This command is used to load relations from the UNIX filesystem to the NITCbase disk. The argument ",(0,l.kt)("inlineCode",{parentName:"p"},"filename")," specifies the name of the ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Comma-separated_values"},"CSV")," (Comma Separated Values) file which contains the contents of the relation to be uploaded. The file names should ",(0,l.kt)("strong",{parentName:"p"},"not")," contain ",(0,l.kt)("inlineCode",{parentName:"p"},"whitespaces")," or any special characters except ",(0,l.kt)("inlineCode",{parentName:"p"},"-")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"_"),". The command checks the size of the relation in the ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Comma-separated_values"},"CSV")," file, allocates the required number of blocks for the relation, updates the ",(0,l.kt)("inlineCode",{parentName:"p"},"Block allocation map"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Relation catalog")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Attribute catalog"),"."),(0,l.kt)("h4",{id:"file-fromat"},"File Fromat"),(0,l.kt)("p",null,"The records to be added in the relation must be in a ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Comma-separated_values"},"CSV")," file.\nThe CSV file ",(0,l.kt)("strong",{parentName:"p"},"must follow")," the following format:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The first line must contain the names of the attributes of the relation separated by commas. "),(0,l.kt)("li",{parentName:"ul"},"Second line onwards records are specified as ",(0,l.kt)("em",{parentName:"li"},"comma-seperated attribute values"),", in the ",(0,l.kt)("strong",{parentName:"li"},"same order")," as the attrbiutes listed in the first line. "),(0,l.kt)("li",{parentName:"ul"},"Only ",(0,l.kt)("strong",{parentName:"li"},"one record is allowed per line."))),(0,l.kt)("h4",{id:"syntax-17"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"import filename\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"The data types of the attributes in the first line are inferred from the values of the corresponding attributes on the second line of the CSV file."),(0,l.kt)("li",{parentName:"ul"},"The name of the CSV file must be the same as the relation to be imported to the disk. i.e. the CSV file name should be in the format ",(0,l.kt)("inlineCode",{parentName:"li"},"relname.csv"),", where relname is taken as name of the new relation."),(0,l.kt)("li",{parentName:"ul"},"First ",(0,l.kt)("strong",{parentName:"li"},"15 characters of name of file is taken as the relation name"),". Similarly, only the first 15 characters of attributes listed in first line of the CSV file is taken as the name for each attribute."),(0,l.kt)("li",{parentName:"ul"},"The CSV file ",(0,l.kt)("strong",{parentName:"li"},"should not contain any null values.")),(0,l.kt)("li",{parentName:"ul"},"If a relation with the same name as that of the CSV file already exists, then the import will ",(0,l.kt)("em",{parentName:"li"},"fail, without any changes to disk.")),(0,l.kt)("li",{parentName:"ul"},"All files to be imported should be stored in the path ",(0,l.kt)("inlineCode",{parentName:"li"},"$HOME/NITCBase/Files/"),"."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("em",{parentName:"li"},"order of attribute values in each line of the CSV file must be same as that of the attributes of the relation.")),(0,l.kt)("li",{parentName:"ul"},"The number of attribute values in each row should match the number of attributes specified in the first line of the file."),(0,l.kt)("li",{parentName:"ul"},"The types of attribute values in each row should match the attribute types inferred from the second line of the file."),(0,l.kt)("li",{parentName:"ul"},"All attribute names of the relation must be unique.")))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Consider the sample ",(0,l.kt)("inlineCode",{parentName:"p"},"Students.csv")," file:   "),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/Files/Students.csv"',title:'"/Files/Students.csv"'},"No,Name,Cgpa\n3,Sunny,8.2\n5,Sania,6.0\n7,Ralph,7.5\n")),(0,l.kt)("p",{parentName:"div"},(0,l.kt)("inlineCode",{parentName:"p"},"import sample.csv")," command will import relation ",(0,l.kt)("inlineCode",{parentName:"p"},"Students")," into the disk"),(0,l.kt)("p",{parentName:"div"},"The first line in the CSV file represents the list of attributes in the relation which in this case are No, Name, Cgpa.\nThe datatypes of the attributes are determined from the values of the attributes in the second line.\nAn attribute can be an a number or a string. In this example the datatypes will be number, string and number respectively."))),(0,l.kt)("h3",{id:"export-relation"},"Export Relation"),(0,l.kt)("h4",{id:"description-18"},"Description"),(0,l.kt)("p",null,"This command is used to export a relation from XFS / NITCbase disk to UNIX file system. All the records corresponding to the relation ",(0,l.kt)("inlineCode",{parentName:"p"},"tablename")," are written to a CSV file named ",(0,l.kt)("inlineCode",{parentName:"p"},"filename.csv"),", located at the following path: ",(0,l.kt)("inlineCode",{parentName:"p"},"$HOME/NITCBase/Files/")),(0,l.kt)("h4",{id:"syntax-18"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"export tablename filename\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"The file to which output is to be written must be a CSV file."),(0,l.kt)("li",{parentName:"ul"},"The file names should not contain ",(0,l.kt)("inlineCode",{parentName:"li"},"whitespaces")," or any special characters except ",(0,l.kt)("inlineCode",{parentName:"li"},"-")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"_"),".")))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"To export a relation ",(0,l.kt)("inlineCode",{parentName:"p"},"Students")," present in the NITCbase disk to a CSV file (named ",(0,l.kt)("inlineCode",{parentName:"p"},"Marks.csv")," located at ",(0,l.kt)("inlineCode",{parentName:"p"},"$HOME/NITCBase/Files/")," directory),\nexecute the following command:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"export Students Marks.csv\n")))),(0,l.kt)("h3",{id:"list-relation-names"},"List Relation Names"),(0,l.kt)("h4",{id:"description-19"},"Description"),(0,l.kt)("p",null,"This command is used to list the names of all relations in present in NITCbase / XFS Disk to the command line."),(0,l.kt)("h4",{id:"syntax-19"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ls\n")),(0,l.kt)("h3",{id:"dump-block-allocation-map"},"Dump Block Allocation Map"),(0,l.kt)("h4",{id:"description-20"},"Description"),(0,l.kt)("p",null,"This command is used to dump the contents of the ",(0,l.kt)("inlineCode",{parentName:"p"},"Block allocation map")," into an external file named ",(0,l.kt)("inlineCode",{parentName:"p"},"block_allocation_map.txt")," located at the following path: ",(0,l.kt)("inlineCode",{parentName:"p"},"$HOME/NITCBase/Files/"),"."),(0,l.kt)("h4",{id:"syntax-20"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dump bmap\n")),(0,l.kt)("h3",{id:"dump-relation-catalog"},"Dump Relation Catalog"),(0,l.kt)("h4",{id:"description-21"},"Description"),(0,l.kt)("p",null,"This command is used to copy the contents of ",(0,l.kt)("inlineCode",{parentName:"p"},"Relation catalog")," to an external file named ",(0,l.kt)("inlineCode",{parentName:"p"},"relation_catalog.txt")," located at the following path: ",(0,l.kt)("inlineCode",{parentName:"p"},"$HOME/NITCBase/Files/"),"."),(0,l.kt)("h4",{id:"syntax-21"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dump relcat\n")),(0,l.kt)("h3",{id:"dump-attribute-catalog"},"Dump Attribute Catalog"),(0,l.kt)("h4",{id:"description-22"},"Description"),(0,l.kt)("p",null,"This command is used to copy the contents of ",(0,l.kt)("inlineCode",{parentName:"p"},"Attribute catalog")," to an external file named ",(0,l.kt)("inlineCode",{parentName:"p"},"attribute_catalog.txt")," located at the following path: ",(0,l.kt)("inlineCode",{parentName:"p"},"$HOME/NITCBase/Files/"),"."),(0,l.kt)("h4",{id:"syntax-22"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dump attrcat\n")),(0,l.kt)("h3",{id:"exit"},"Exit"),(0,l.kt)("h4",{id:"description-23"},"Description"),(0,l.kt)("p",null,"This command is used to exit the XFS Interface."),(0,l.kt)("h4",{id:"syntax-23"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")),(0,l.kt)("h3",{id:"print-b-tree"},"Print B+ Tree"),(0,l.kt)("h4",{id:"description-24"},"Description"),(0,l.kt)("p",null,"This command is used to print the ",(0,l.kt)("inlineCode",{parentName:"p"},"B+ tree"),"(in a level order manner) corresponding to the index created on an attribute of a relation. If index does not exist then an error message of ",(0,l.kt)("inlineCode",{parentName:"p"},"Index does not exist")," is returned."),(0,l.kt)("h4",{id:"syntax-24"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"print b+ tree relation_name.attribute_name\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Consider the sample ",(0,l.kt)("inlineCode",{parentName:"p"},"numbers.csv")," file:   "),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/Files/numbers.csv"',title:'"/Files/numbers.csv"'},"key\n10\n5\n75\n20\n.\n.\n.\n")),(0,l.kt)("p",{parentName:"div"},"Assume an index is created on the attribute ",(0,l.kt)("inlineCode",{parentName:"p"},"key"),". Now to print the B+ tree corresponding to that index the following command can be used:\n",(0,l.kt)("inlineCode",{parentName:"p"},"print b+ tree numbers.key"),". This will give the following output:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre"},"LEVEL 0\n40   \nLEVEL 1\n10,20   55,65   \nLEVEL 2\n5,10   15,20   25,40,40   45,55   60,65   70,75\n")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"The tree is printed in a level-order manner.\nIn the above B+ tree, ",(0,l.kt)("inlineCode",{parentName:"p"},"40")," is the root node and it's left and right child nodes are ",(0,l.kt)("inlineCode",{parentName:"p"},"10,20")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"55,65")," respectively")))),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"In the above example, output shown is for a B+ tree which allows that maximum ",(0,l.kt)("inlineCode",{parentName:"p"},"4")," keys in the internal node and maximum ",(0,l.kt)("inlineCode",{parentName:"p"},"3")," keys in the leaf nodes. In NITCbase B+ tree design, maximum ",(0,l.kt)("inlineCode",{parentName:"p"},"100")," keys are allowed in the internal node and maximum ",(0,l.kt)("inlineCode",{parentName:"p"},"63")," keys are allowed in the leaf node."))),(0,l.kt)("h3",{id:"print-b-blocks"},"Print B+ Blocks"),(0,l.kt)("h4",{id:"description-25"},"Description"),(0,l.kt)("p",null,"This command is used to print the data stored in ",(0,l.kt)("inlineCode",{parentName:"p"},"index blocks"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"internal index blocks")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"leaf index blocks"),") of the ",(0,l.kt)("inlineCode",{parentName:"p"},"B+ tree")," corresponding to an attribute of a relation. If index does not exist then an error message of ",(0,l.kt)("inlineCode",{parentName:"p"},"Index does not exist")," is returned."),(0,l.kt)("h4",{id:"syntax-25"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"print b+ blocks relation_name.attribute_name\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Example")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Consider the sample ",(0,l.kt)("inlineCode",{parentName:"p"},"numbers.csv")," file:   "),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="/Files/numbers.csv"',title:'"/Files/numbers.csv"'},"key\n10\n5\n75\n20\n.\n.\n.\n")),(0,l.kt)("p",{parentName:"div"},"Assume an index is created on the attribute ",(0,l.kt)("inlineCode",{parentName:"p"},"key"),". Now to print the index blocks corresponding to that index the following command can be used:\n",(0,l.kt)("inlineCode",{parentName:"p"},"print b+ blocks numbers.key"),". This will give the following output:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-c"},"----- B+ TREE BLOCKS -----\nBLOCK 15\nBlock Type: IND_INTERNAL\nParent Block: -1\nNo of entries: 1\nlchild: 9, key_val: 40, rchild: 14\n---------\nBLOCK 9\nBlock Type: IND_INTERNAL\nParent Block: 15\nNo of entries: 2\nlchild: 7, key_val: 10, rchild: 8\nlchild: 8, key_val: 20, rchild: 11\n---------\nBLOCK 7\nBlock Type: IND_LEAF\nParent Block: 9\nNo of entries: 2\nleft node: -1, right node: 8\nkey_val: 5\nkey_val: 10\n---------\nBLOCK 8\nBlock Type: IND_LEAF\nParent Block: 9\nNo of entries: 2\nleft node: 7, right node: 11\nkey_val: 15\nkey_val: 20\n---------\nBLOCK 11\nBlock Type: IND_LEAF\nParent Block: 9\nNo of entries: 3\nleft node: 8, right node: 13\nkey_val: 25\nkey_val: 40\nkey_val: 40\n---------\nBLOCK 14\nBlock Type: IND_INTERNAL\nParent Block: 15\nNo of entries: 2\nlchild: 13, key_val: 55, rchild: 10\nlchild: 10, key_val: 65, rchild: 12\n---------\nBLOCK 13\nBlock Type: IND_LEAF\nParent Block: 14\nNo of entries: 2\nleft node: 11, right node: 10\nkey_val: 45\nkey_val: 55\n---------\nBLOCK 10\nBlock Type: IND_LEAF\nParent Block: 14\nNo of entries: 2\nleft node: 13, right node: 12\nkey_val: 60\nkey_val: 65\n---------\nBLOCK 12\nBlock Type: IND_LEAF\nParent Block: 14\nNo of entries: 2\nleft node: 10, right node: -1\nkey_val: 70\nkey_val: 75\n---------\n")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"The b+ tree blocks is printed in a level-order manner.")))),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"In the above example, output shown is for a B+ tree which allows that maximum ",(0,l.kt)("inlineCode",{parentName:"p"},"4")," keys in the internal node and maximum ",(0,l.kt)("inlineCode",{parentName:"p"},"3")," keys in the leaf nodes. In NITCbase B+ tree design, maximum ",(0,l.kt)("inlineCode",{parentName:"p"},"100")," keys are allowed in the internal node and maximum ",(0,l.kt)("inlineCode",{parentName:"p"},"63")," keys are allowed in the leaf node."))),(0,l.kt)("h2",{id:"script-commands"},"Script Commands"),(0,l.kt)("p",null,"Script commands are available for both XFS interface and frontend interface. These commands help the user to execute mutliple commands sequentially from a file and also to print out custom useful messages into terminal for debugging and informational purposes."),(0,l.kt)("h3",{id:"batch-execution"},"Batch Execution"),(0,l.kt)("h4",{id:"description-26"},"Description"),(0,l.kt)("p",null,"This command is used to run multiple commands in sequence by reading the commands line-by-line from an external file. For example the ",(0,l.kt)("inlineCode",{parentName:"p"},"run")," command given below will execute commands present in ",(0,l.kt)("inlineCode",{parentName:"p"},"filename"),". If there is an error on running a command at a given line, all commands after that ",(0,l.kt)("strong",{parentName:"p"},"will not be excuted")," and the ",(0,l.kt)("inlineCode",{parentName:"p"},"run")," command fails by giving the line number of the command in which error occurred."),(0,l.kt)("h4",{id:"syntax-26"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"run filename\n")),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"This is useful to execute multiple commonly used commands while debugging."))),(0,l.kt)("h3",{id:"echo"},"Echo"),(0,l.kt)("h4",{id:"description-27"},"Description"),(0,l.kt)("p",null,"This command is used to echo back the message given as argument to the command line."),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"This is useful while debugging in combination with the ",(0,l.kt)("inlineCode",{parentName:"p"},"run")," command."))),(0,l.kt)("h4",{id:"syntax-27"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"echo <any message>\n")))}c.isMDXComponent=!0}}]);